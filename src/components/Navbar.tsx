import { Link, useLocation } from 'react-router-dom';
import { MdModeNight, MdSunny, MdMenu, MdClose } from 'react-icons/md';
import { useEffect, useState } from 'react';

const Navbar = () => {
  const [isDarkMode, setIsDarkMode] = useState(
    () => !(window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches)
  );
  const [isMenuOpen, setIsMenuOpen] = useState(false);
  const location = useLocation();

  useEffect(() => {
    if (!isDarkMode) {
      document.documentElement.classList.add('dark');
    } else {
      document.documentElement.classList.remove('dark');
    }
  }, [isDarkMode]);

  function toggleDark() {
    setIsDarkMode(!isDarkMode);
  }

  function toggleMenu() {
    setIsMenuOpen(!isMenuOpen);
  }

  const navLinks = [
    { path: '/', label: 'Home' },
    { path: '/projects', label: 'Project' },
    // { path: '/about', label: 'About' },
    {path: '/blogs', label: 'Blogs'},
    { path: '/contact', label: 'Contact' },
  ];

  return (
    <header className="w-full bg-transparent py-1 relative mb-6 text-sm mt-4">
      <nav className="max-w-3xl mx-auto px-4 font-medium ">
        <div className="flex items-center justify-between">
          {/* Logo Section */}
          <div className="flex items-center space-x-2">
            <Link
              to="/"
              className={`text-xl font-bold text-white dark:text-black hover:text-gray-300 transition-colors duration-300 ${
                location.pathname === '/' ? 'font-extrabold' : ''
              }
							`}
            >
              <div className='w-6 h-6 '>
                {isDarkMode ? (
                  <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px"
                    width="100%" viewBox="0 0 116 140" enableBackground="new 0 0 116 140" >
                    <path fill="" opacity="1.000000" stroke="none" d="M59.000000,141.000000 C39.333332,141.000000 20.166666,141.000000 1.000000,141.000000 C1.000000,94.333336 1.000000,47.666668 1.000000,1.000000 C39.666668,1.000000 78.333336,1.000000 117.000000,1.000000 C117.000000,47.666668 117.000000,94.333336 117.000000,141.000000 C97.833336,141.000000 78.666664,141.000000 59.000000,141.000000 M55.690182,106.206009 C51.073757,108.478790 46.524502,110.903732 41.821285,112.979904 C37.455784,114.906982 33.023670,116.819199 28.439013,118.072807 C24.420599,119.171577 20.222425,118.623070 18.003431,114.407356 C15.698348,110.028076 16.160128,105.226234 19.602219,101.919975 C22.138885,99.483437 26.017424,98.328766 29.450550,96.995659 C30.882044,96.439812 32.709354,96.903313 34.356686,96.903313 C33.716118,95.164238 33.014091,94.471954 32.171383,94.090248 C22.862499,89.873787 12.808042,94.091362 8.844210,103.832870 C4.696716,114.025734 9.488772,125.458206 19.454048,128.781448 C26.784664,131.226074 33.917118,130.139191 40.729366,126.798912 C53.546822,120.514099 66.281898,114.060081 79.136963,107.854004 C82.391235,106.282928 85.892982,105.033463 89.418121,104.265793 C93.279228,103.424973 97.936974,103.640633 99.450729,107.658730 C100.705711,110.989929 100.629860,115.559334 99.380386,118.925743 C97.472420,124.066307 92.516846,125.771072 87.112152,125.672668 C85.949493,125.651497 84.786133,125.669586 82.191437,125.669586 C84.009888,126.962509 84.558441,127.493553 85.212624,127.796570 C95.501190,132.562256 105.431625,128.376297 109.327271,117.657509 C113.191956,107.023933 107.746178,95.932327 97.221184,93.081245 C90.462845,91.250488 84.007431,92.460686 77.838135,95.397148 C70.645332,98.820770 63.533031,102.413490 55.690182,106.206009 M28.001358,40.655392 C21.485630,58.044224 28.409216,75.740532 44.756344,83.480232 C60.580215,90.972176 78.956680,84.940819 88.187378,69.225716 C95.375092,56.988731 92.995674,38.165390 82.045616,30.580730 C85.822517,40.800797 88.380806,50.184536 82.832458,59.149250 C77.419930,67.894501 69.479492,72.815529 58.996922,73.145233 C51.543217,73.379669 45.452774,70.076241 40.167397,65.298302 C29.436121,55.597313 30.708158,43.738850 35.630161,31.349403 C34.994980,31.228029 34.359798,31.106655 33.724621,30.985283 C31.900122,33.965977 30.075626,36.946671 28.001358,40.655392 M43.979233,21.632317 C42.886093,32.484764 45.187527,39.377380 51.112579,41.545753 C50.559856,40.039257 50.114826,38.892593 49.716774,37.729843 C48.011417,32.748375 48.267780,27.918104 51.053879,23.379000 C55.023872,16.911110 62.983105,16.912827 66.845963,23.404148 C69.453285,27.785614 69.868233,32.441692 68.170357,37.287022 C67.695961,38.640823 67.417900,40.063419 66.780228,42.472984 C77.427521,34.258179 76.000313,14.524046 65.466347,9.050951 C64.314865,8.452682 62.994846,8.071496 61.708443,7.857581 C53.043907,6.416764 47.787136,10.316389 43.979233,21.632317 z"/>
                    <path fill="#FFFF" opacity="1.000000" stroke="none" d="M56.037991,106.069420 C63.533031,102.413490 70.645332,98.820770 77.838135,95.397148 C84.007431,92.460686 90.462845,91.250488 97.221184,93.081245 C107.746178,95.932327 113.191956,107.023933 109.327271,117.657509 C105.431625,128.376297 95.501190,132.562256 85.212624,127.796570 C84.558441,127.493553 84.009888,126.962509 82.191437,125.669586 C84.786133,125.669586 85.949493,125.651497 87.112152,125.672668 C92.516846,125.771072 97.472420,124.066307 99.380386,118.925743 C100.629860,115.559334 100.705711,110.989929 99.450729,107.658730 C97.936974,103.640633 93.279228,103.424973 89.418121,104.265793 C85.892982,105.033463 82.391235,106.282928 79.136963,107.854004 C66.281898,114.060081 53.546822,120.514099 40.729366,126.798912 C33.917118,130.139191 26.784664,131.226074 19.454048,128.781448 C9.488772,125.458206 4.696716,114.025734 8.844210,103.832870 C12.808042,94.091362 22.862499,89.873787 32.171383,94.090248 C33.014091,94.471954 33.716118,95.164238 34.356686,96.903313 C32.709354,96.903313 30.882044,96.439812 29.450550,96.995659 C26.017424,98.328766 22.138885,99.483437 19.602219,101.919975 C16.160128,105.226234 15.698348,110.028076 18.003431,114.407356 C20.222425,118.623070 24.420599,119.171577 28.439013,118.072807 C33.023670,116.819199 37.455784,114.906982 41.821285,112.979904 C46.524502,110.903732 51.073757,108.478790 56.037991,106.069420 z"/>
                    <path fill="#FFFF" opacity="1.000000" stroke="none" d="M28.126244,40.291378 C30.075626,36.946671 31.900122,33.965977 33.724621,30.985283 C34.359798,31.106655 34.994980,31.228029 35.630161,31.349403 C30.708158,43.738850 29.436121,55.597313 40.167397,65.298302 C45.452774,70.076241 51.543217,73.379669 58.996922,73.145233 C69.479492,72.815529 77.419930,67.894501 82.832458,59.149250 C88.380806,50.184536 85.822517,40.800797 82.045616,30.580730 C92.995674,38.165390 95.375092,56.988731 88.187378,69.225716 C78.956680,84.940819 60.580215,90.972176 44.756344,83.480232 C28.409216,75.740532 21.485630,58.044224 28.126244,40.291378 z"/>
                    <path fill="#FFFF" opacity="1.000000" stroke="none" d="M44.035217,21.233807 C47.787136,10.316389 53.043907,6.416764 61.708443,7.857581 C62.994846,8.071496 64.314865,8.452682 65.466347,9.050951 C76.000313,14.524046 77.427521,34.258179 66.780228,42.472984 C67.417900,40.063419 67.695961,38.640823 68.170357,37.287022 C69.868233,32.441692 69.453285,27.785614 66.845963,23.404148 C62.983105,16.912827 55.023872,16.911110 51.053879,23.379000 C48.267780,27.918104 48.011417,32.748375 49.716774,37.729843 C50.114826,38.892593 50.559856,40.039257 51.112579,41.545753 C45.187527,39.377380 42.886093,32.484764 44.035217,21.233807 z"/>
                  </svg>
                ) : (
                  <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px"
                    width="100%" viewBox="0 0 116 140" enableBackground="new 0 0 116 140" >
                    <path fill="#ffff" opacity="1.000000" stroke="none" d="M59.000000,141.000000 C39.333332,141.000000 20.166666,141.000000 1.000000,141.000000 C1.000000,94.333336 1.000000,47.666668 1.000000,1.000000 C39.666668,1.000000 78.333336,1.000000 117.000000,1.000000 C117.000000,47.666668 117.000000,94.333336 117.000000,141.000000 C97.833336,141.000000 78.666664,141.000000 59.000000,141.000000 M55.690182,106.206009 C51.073757,108.478790 46.524502,110.903732 41.821285,112.979904 C37.455784,114.906982 33.023670,116.819199 28.439013,118.072807 C24.420599,119.171577 20.222425,118.623070 18.003431,114.407356 C15.698348,110.028076 16.160128,105.226234 19.602219,101.919975 C22.138885,99.483437 26.017424,98.328766 29.450550,96.995659 C30.882044,96.439812 32.709354,96.903313 34.356686,96.903313 C33.716118,95.164238 33.014091,94.471954 32.171383,94.090248 C22.862499,89.873787 12.808042,94.091362 8.844210,103.832870 C4.696716,114.025734 9.488772,125.458206 19.454048,128.781448 C26.784664,131.226074 33.917118,130.139191 40.729366,126.798912 C53.546822,120.514099 66.281898,114.060081 79.136963,107.854004 C82.391235,106.282928 85.892982,105.033463 89.418121,104.265793 C93.279228,103.424973 97.936974,103.640633 99.450729,107.658730 C100.705711,110.989929 100.629860,115.559334 99.380386,118.925743 C97.472420,124.066307 92.516846,125.771072 87.112152,125.672668 C85.949493,125.651497 84.786133,125.669586 82.191437,125.669586 C84.009888,126.962509 84.558441,127.493553 85.212624,127.796570 C95.501190,132.562256 105.431625,128.376297 109.327271,117.657509 C113.191956,107.023933 107.746178,95.932327 97.221184,93.081245 C90.462845,91.250488 84.007431,92.460686 77.838135,95.397148 C70.645332,98.820770 63.533031,102.413490 55.690182,106.206009 M28.001358,40.655392 C21.485630,58.044224 28.409216,75.740532 44.756344,83.480232 C60.580215,90.972176 78.956680,84.940819 88.187378,69.225716 C95.375092,56.988731 92.995674,38.165390 82.045616,30.580730 C85.822517,40.800797 88.380806,50.184536 82.832458,59.149250 C77.419930,67.894501 69.479492,72.815529 58.996922,73.145233 C51.543217,73.379669 45.452774,70.076241 40.167397,65.298302 C29.436121,55.597313 30.708158,43.738850 35.630161,31.349403 C34.994980,31.228029 34.359798,31.106655 33.724621,30.985283 C31.900122,33.965977 30.075626,36.946671 28.001358,40.655392 M43.979233,21.632317 C42.886093,32.484764 45.187527,39.377380 51.112579,41.545753 C50.559856,40.039257 50.114826,38.892593 49.716774,37.729843 C48.011417,32.748375 48.267780,27.918104 51.053879,23.379000 C55.023872,16.911110 62.983105,16.912827 66.845963,23.404148 C69.453285,27.785614 69.868233,32.441692 68.170357,37.287022 C67.695961,38.640823 67.417900,40.063419 66.780228,42.472984 C77.427521,34.258179 76.000313,14.524046 65.466347,9.050951 C64.314865,8.452682 62.994846,8.071496 61.708443,7.857581 C53.043907,6.416764 47.787136,10.316389 43.979233,21.632317 z"/>
                    <path fill="#000" opacity="1.000000" stroke="none" d="M56.037991,106.069420 C63.533031,102.413490 70.645332,98.820770 77.838135,95.397148 C84.007431,92.460686 90.462845,91.250488 97.221184,93.081245 C107.746178,95.932327 113.191956,107.023933 109.327271,117.657509 C105.431625,128.376297 95.501190,132.562256 85.212624,127.796570 C84.558441,127.493553 84.009888,126.962509 82.191437,125.669586 C84.786133,125.669586 85.949493,125.651497 87.112152,125.672668 C92.516846,125.771072 97.472420,124.066307 99.380386,118.925743 C100.629860,115.559334 100.705711,110.989929 99.450729,107.658730 C97.936974,103.640633 93.279228,103.424973 89.418121,104.265793 C85.892982,105.033463 82.391235,106.282928 79.136963,107.854004 C66.281898,114.060081 53.546822,120.514099 40.729366,126.798912 C33.917118,130.139191 26.784664,131.226074 19.454048,128.781448 C9.488772,125.458206 4.696716,114.025734 8.844210,103.832870 C12.808042,94.091362 22.862499,89.873787 32.171383,94.090248 C33.014091,94.471954 33.716118,95.164238 34.356686,96.903313 C32.709354,96.903313 30.882044,96.439812 29.450550,96.995659 C26.017424,98.328766 22.138885,99.483437 19.602219,101.919975 C16.160128,105.226234 15.698348,110.028076 18.003431,114.407356 C20.222425,118.623070 24.420599,119.171577 28.439013,118.072807 C33.023670,116.819199 37.455784,114.906982 41.821285,112.979904 C46.524502,110.903732 51.073757,108.478790 56.037991,106.069420 z"/>
                    <path fill="#000" opacity="1.000000" stroke="none" d="M28.126244,40.291378 C30.075626,36.946671 31.900122,33.965977 33.724621,30.985283 C34.359798,31.106655 34.994980,31.228029 35.630161,31.349403 C30.708158,43.738850 29.436121,55.597313 40.167397,65.298302 C45.452774,70.076241 51.543217,73.379669 58.996922,73.145233 C69.479492,72.815529 77.419930,67.894501 82.832458,59.149250 C88.380806,50.184536 85.822517,40.800797 82.045616,30.580730 C92.995674,38.165390 95.375092,56.988731 88.187378,69.225716 C78.956680,84.940819 60.580215,90.972176 44.756344,83.480232 C28.409216,75.740532 21.485630,58.044224 28.126244,40.291378 z"/>
                    <path fill="#000" opacity="1.000000" stroke="none" d="M44.035217,21.233807 C47.787136,10.316389 53.043907,6.416764 61.708443,7.857581 C62.994846,8.071496 64.314865,8.452682 65.466347,9.050951 C76.000313,14.524046 77.427521,34.258179 66.780228,42.472984 C67.417900,40.063419 67.695961,38.640823 68.170357,37.287022 C69.868233,32.441692 69.453285,27.785614 66.845963,23.404148 C62.983105,16.912827 55.023872,16.911110 51.053879,23.379000 C48.267780,27.918104 48.011417,32.748375 49.716774,37.729843 C50.114826,38.892593 50.559856,40.039257 51.112579,41.545753 C45.187527,39.377380 42.886093,32.484764 44.035217,21.233807 z"/>
                  </svg>
                )}
              </div>
            </Link>
            <div className="dark:text-black flex justify-center items-center animate-pulse" style={{ fontSize: '9px' }}>
              <p className="bg-green-500/70 rounded-lg px-2 text-black">Open-to-Work</p>
            </div>
          </div>

          {/* Desktop Navigation */}
          <div className="hidden md:flex items-center justify-center flex-1">
            <ul className="flex space-x-3 text-white">
              {navLinks.map((link) => (
                <Link to={link.path} key={link.path}>
                  <li
                    className={`px-2 py-1 cursor-pointer dark:text-black hover:text-gray-300 transition-colors duration-300 hover:dark:bg-slate-300/50 hover:rounded-md  ${
                      location.pathname === link.path ? 'dark:bg-slate-300/50 rounded-md bg-slate-600/50'  : ''
                    }`}
                  >
                    {link.label}
                  </li>
                </Link>
              ))}
            </ul>
          </div>

          {/* Action Buttons - Dark Mode Toggle & Cal.com & Menu */}
          <div className="flex items-center gap-3">
            {/* Call to Action Button - Moved outside of menu button container */}
            <a href='https://cal.com/sadanandmiskin' target='_blank' rel='noopener noreferrer'>
              <button className="relative ml-2 px-4 py-2 text-white dark:text-black font-semibold rounded-md overflow-hidden group border-2 border-yellow-500 hover:bg-gray-500/50 dark:hover:bg-gray-400/50 transition duration-300">
                <span className="absolute inset-0 w-full h-full rounded-md animate-spin-slow bg-gradient-to-r from-gray-500 via-black-500 to-zinc-500 opacity-30 blur-sm"></span>
                <span className="relative z-10">Get on Call</span>
              </button>
            </a>

            {/* Mobile Menu Toggle - Moved outside the anchor tag */}
            <button
              onClick={toggleMenu}
              className="p-2 md:hidden text-white dark:text-black hover:text-gray-300 transition-colors duration-300"
            >
              {isMenuOpen ? <MdClose className="h-6 w-6" /> : <MdMenu className="h-6 w-6" />}
            </button>

            {/* Dark Mode Toggle */}
            <button
              onClick={toggleDark}
              className="hover:text-gray-300 dark:text-black transition-colors duration-300"
            >
              {isDarkMode ? (
                <MdModeNight className="text-white h-6 w-6" />
              ) : (
                <MdSunny className="h-6 w-6" />
              )}
            </button>
          </div>
        </div>

        {/* Mobile Menu */}
        {isMenuOpen && (
          <div className="md:hidden absolute top-full left-0 w-full z-10">
            <ul className="bg-white/10 backdrop-blur-md dark:bg-black/10 rounded-lg mt-2 p-4 space-y-2 shadow-lg">
              {navLinks.map((link) => (
                <li
                  key={link.path}
                  className={`cursor-pointer text-white dark:text-black hover:text-gray-300 transition-colors duration-300 ${
                    location.pathname === link.path ? 'font-bold bg-gray-500/50 backdrop-blur-md rounded-lg' : ''
                  }`}
                >
                  <Link
                    to={link.path}
                    onClick={() => setIsMenuOpen(false)}
                    className="block p-2"
                  >
                    {link.label}
                  </Link>
                </li>
              ))}
            </ul>
          </div>
        )}
      </nav>
    </header>
  );
};

export default Navbar;